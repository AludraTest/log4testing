<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://aludratest.org/log4testing/1.0" xmlns="http://aludratest.org/log4testing/1.0"
	elementFormDefault="qualified">

	<xs:element name="configuration">
		<xs:complexType>
			<xs:sequence minOccurs="0">
				<xs:element name="properties" type="propertiesElement" minOccurs="0" >
					<xs:annotation>
						<xs:documentation>Use this element to declare global properties, which can be re-used in other properties in this XML file, in the syntax ${propertyKey}. This makes configuration files easier to read.</xs:documentation>
					</xs:annotation></xs:element>
				<xs:element name="abbreviations" type="abbreviationsElement" minOccurs="0" />
				<xs:element name="writers" type="writersElement" minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="propertiesElement">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="property">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="key" type="xs:string">
							<xs:annotation>
								<xs:documentation>The key (name) of the property.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="value" type="xs:string">
							<xs:annotation>
								<xs:documentation>The value of the property. You can write ${myProperty} anywhere here, which will be replaced with the global property named myProperty (this is not true for the global properties itself). Use $${myProperty} to escape this sequence (will be replaced by the text {$myProperty}).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="abbreviationsElement">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="abbreviation">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="text" type="xs:string" />
						<xs:element name="replacement" type="xs:string" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="writersElement">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="writer">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="class" type="xs:string" />
						<xs:element name="properties" minOccurs="0" maxOccurs="1" type="propertiesElement" />
						<xs:element name="testStepFilters" minOccurs="0" maxOccurs="1">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="testStepFilter" minOccurs="0" maxOccurs="unbounded">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="class" type="xs:string" />
												<xs:element name="properties" minOccurs="0" maxOccurs="1" type="propertiesElement" />
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

</xs:schema>